>git init ==> Initializing following path as git repository
> git --version => git version

> git config --global user.name "Abc tesr"
> git config --global user.emal "Abc@tesr.com"
Login as git user 

>pwd => to see current home path

>cd ~ => changes directory to home path

>git add . => Save all your chnages to git

>git add abc.txt==> Save changes made in shown file only

>git commit -m "this is the messAGE during commit"

>git log => to see commit messages during the time

>git log --author="personname" => commits from the following person

>git log --pretty=oneline => status of previous commits in oneline

>git status ==> look for any changes in any file/directory

>git diff ==> to see what are the changes we made but yet not saved also the differences between our working project and git repository
-If no changes were made, blank will be shown. It's called as staging.

>git diff --staged=> compares staging area in repository and current directory

>git rm abc.txt => removes perticular file from working directory

>git mv abc.txt changed.txt => Renames the following file name to next one


>git commit -am "commit all changes without doing git add . for files"  => Shorcut to commit all files

>git checkout -- abc.txt => undo previous changes which are not made as commit

>git reset HEAD abc.txt ==> to unstage the staged file (i.e done by git add .=> it undos that )

>git checkout 08ubi -- filename.txt ==> 08ubi is the commit number for the previous version and this command is used to bring back previous version file

============
Pushing files to gitHub
===========
>git remote add nickNameofLink https://github.com/myproject ==> Connects to the online repository

> git remote ==> get the name of Remote link

>git push -u nickNameofLink => Push local files to online repository